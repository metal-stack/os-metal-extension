#!/bin/bash

# FIXME this file is cloud provider specific and must be adopted to match our requirements.
# after modifications, it must be compiled with hack/generate, which create the chart entry in controller-registration.yaml
# This step is already done in the Dockerfile.
# should be renamed to ignition.sh.template

{{- define "put-content" -}}
cat << EOF | base64 -d > '{{ .Path }}'
{{ .Content }}
EOF
{{- end -}}

{{- if .Bootstrap }}
#Disable upgrade related services
systemctl disable locksmithd
systemctl stop locksmithd
systemctl disable update-engine
systemctl stop update-engine

#Fix mis-configuration of dockerd
mkdir -p /etc/docker
echo '{ "storage-driver": "devicemapper" }' > /etc/docker/daemon.json
sed -i '/Environment=DOCKER_SELINUX=--selinux-enabled=true/s/^/#/g' /run/systemd/system/docker.service
{{- end }}

{{ range $_, $file := .Files -}}
mkdir -p '{{ $file.Dirname }}'
{{ template "put-content" $file }}
{{- if $file.Permissions }}
chmod '{{ $file.Permissions }}' '{{ $file.Path }}'
{{ end }}
{{ end }}

{{- range $_, $unit := .Units -}}
{{ if $unit.Content -}}
{{ template "put-content" $unit }}
{{- end }}
{{ if $unit.DropIns }}
mkdir -p '{{ $unit.DropIns.Path }}'
{{ range $_, $dropIn := $unit.DropIns.Items -}}
{{ template "put-content" $dropIn }}
{{- end -}}
{{- end -}}
{{- end }}

# Change existing worker to use docker registry-mirror
file="/etc/docker/daemon.json"
if [ $(jq -r 'has("registry-mirrors")' "${file}") == "false" ]; then
    contents=$(jq -M '. += {"registry-mirrors": ["https://mirror.gcr.io"]}' ${file})
    echo "${contents}" > ${file}
    systemctl daemon-reload
    systemctl reload docker
fi

{{ if .Bootstrap -}}
META_EP=http://100.100.100.200/latest/meta-data
PROVIDER_ID=`curl -s $META_EP/region-id`.`curl -s $META_EP/instance-id`
echo PROVIDER_ID=$PROVIDER_ID > $DOWNLOAD_MAIN_PATH/provider-id
echo PROVIDER_ID=$PROVIDER_ID >> /etc/environment

systemctl daemon-reload
systemctl restart docker
{{ range $_, $unit := .Units -}}
systemctl enable '{{ $unit.Name }}' && systemctl restart '{{ $unit.Name }}'
{{- end -}}
{{- end -}}
